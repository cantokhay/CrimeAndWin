// <auto-generated />
using System;
using GameWorld.Infrastructure.Persistance.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameWorld.Infrastructure.Migrations
{
    [DbContext(typeof(GameWorldDbContext))]
    partial class GameWorldDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameWorld.Domain.Entities.GameWorld", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GameWorlds", (string)null);
                });

            modelBuilder.Entity("GameWorld.Domain.Entities.Season", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("GameWorldId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GameWorldId");

                    b.ToTable("Seasons", (string)null);
                });

            modelBuilder.Entity("GameWorld.Domain.Entities.GameWorld", b =>
                {
                    b.OwnsOne("GameWorld.Domain.VOs.GameRule", "Rule", b1 =>
                        {
                            b1.Property<Guid>("GameWorldId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<int>("MaxEnergy")
                                .HasColumnType("int")
                                .HasColumnName("MaxEnergy");

                            b1.Property<int>("RegenRatePerHour")
                                .HasColumnType("int")
                                .HasColumnName("RegenRatePerHour");

                            b1.HasKey("GameWorldId");

                            b1.ToTable("GameWorlds");

                            b1.WithOwner()
                                .HasForeignKey("GameWorldId");
                        });

                    b.Navigation("Rule")
                        .IsRequired();
                });

            modelBuilder.Entity("GameWorld.Domain.Entities.Season", b =>
                {
                    b.HasOne("GameWorld.Domain.Entities.GameWorld", null)
                        .WithMany("Seasons")
                        .HasForeignKey("GameWorldId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GameWorld.Domain.VOs.DateRange", "DateRange", b1 =>
                        {
                            b1.Property<Guid>("SeasonId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("EndUtc")
                                .HasColumnType("datetime2")
                                .HasColumnName("EndUtc");

                            b1.Property<DateTime>("StartUtc")
                                .HasColumnType("datetime2")
                                .HasColumnName("StartUtc");

                            b1.HasKey("SeasonId");

                            b1.ToTable("Seasons");

                            b1.WithOwner()
                                .HasForeignKey("SeasonId");
                        });

                    b.Navigation("DateRange")
                        .IsRequired();
                });

            modelBuilder.Entity("GameWorld.Domain.Entities.GameWorld", b =>
                {
                    b.Navigation("Seasons");
                });
#pragma warning restore 612, 618
        }
    }
}
