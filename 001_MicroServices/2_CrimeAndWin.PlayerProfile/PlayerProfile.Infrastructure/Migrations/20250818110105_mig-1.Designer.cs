// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayerProfile.Infrastructure.Persistance.Context;

#nullable disable

namespace PlayerProfile.Infrastructure.Migrations
{
    [DbContext(typeof(PlayerProfileDbContext))]
    [Migration("20250818110105_mig-1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlayerProfile.Domain.Entities.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AvatarKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastEnergyCalcUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAtUtc")
                        .HasColumnType("datetime2");

                    b.ComplexProperty<Dictionary<string, object>>("Energy", "PlayerProfile.Domain.Entities.Player.Energy#Energy", b1 =>
                        {
                            b1.Property<int>("Current")
                                .HasColumnType("int")
                                .HasColumnName("EnergyCurrent");

                            b1.Property<int>("Max")
                                .HasColumnType("int")
                                .HasColumnName("EnergyMax");

                            b1.Property<int>("RegenPerMinute")
                                .HasColumnType("int")
                                .HasColumnName("EnergyRegenPerMinute");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Rank", "PlayerProfile.Domain.Entities.Player.Rank#Rank", b1 =>
                        {
                            b1.Property<int?>("Position")
                                .HasColumnType("int")
                                .HasColumnName("RankPosition");

                            b1.Property<int>("RankPoints")
                                .HasColumnType("int")
                                .HasColumnName("RankPoints");
                        });

                    b.ComplexProperty<Dictionary<string, object>>("Stats", "PlayerProfile.Domain.Entities.Player.Stats#Stats", b1 =>
                        {
                            b1.Property<int>("Agility")
                                .HasColumnType("int")
                                .HasColumnName("Agility");

                            b1.Property<int>("Defense")
                                .HasColumnType("int")
                                .HasColumnName("Defense");

                            b1.Property<int>("Luck")
                                .HasColumnType("int")
                                .HasColumnName("Luck");

                            b1.Property<int>("Power")
                                .HasColumnType("int")
                                .HasColumnName("Power");
                        });

                    b.HasKey("Id");

                    b.ToTable("Players", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
